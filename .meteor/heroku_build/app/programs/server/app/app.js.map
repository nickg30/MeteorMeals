{"version":3,"sources":["meteor://ðŸ’»app/lib/routes.js","meteor://ðŸ’»app/collections/recipes.js","meteor://ðŸ’»app/server/init.js","meteor://ðŸ’»app/server/publish.js","meteor://ðŸ’»app/intermediate.js"],"names":["Meteor","isClient","Accounts","onLogin","FlowRouter","go","onLogout","triggers","enter","context","redirect","userId","route","name","action","GAnalytics","pageview","BlazeLayout","render","main","Recipes","Mongo","Collection","allow","insert","doc","update","Ingredient","SimpleSchema","type","String","amount","RecipeSchema","label","desc","ingredients","inMenu","Boolean","defaultValue","optional","autoform","author","autoValue","createdAt","Date","methods","toggleMenuItem","id","currentState","$set","deleteRecipe","remove","attachSchema","startup","publish","find","check","_id","isServer"],"mappings":"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","file":"/app.js","sourcesContent":["if(Meteor.isClient){\n\tAccounts.onLogin(function(){\n\t\tFlowRouter.go('recipe-book');\n\t});\n\n\tAccounts.onLogout(function(){\n\t\tFlowRouter.go('home');\n\t});\n}\nFlowRouter.triggers.enter([function(context, redirect){\n\tif(!Meteor.userId()) {\n\t\tFlowRouter.go('home');\n\t}\n}]);\n\nFlowRouter.route('/', {\n\tname: 'home',\n\taction() {\n\t\tif(Meteor.userId()) {\n\t\t\tFlowRouter.go('recipe-book');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('HomeLayout');\n\t}\n});\n\nFlowRouter.route('/recipe-book', {\n\tname: 'recipe-book',\n\taction() {\n\t\tif(Meteor.userId()){\n\t\t\tFlowRouter.go('recipe-book');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout', {main: 'Recipes'});\n\t}\n});\n\nFlowRouter.route('/recipe/:id', {\n\tname: 'recipe',\n\taction() {\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout', {main: 'RecipeSingle'});\n\t}\n});\n\nFlowRouter.route('/menu', {\n\tname: 'menu',\n\taction() {\n\t\tBlazeLayout.render('MainLayout', {main: 'Menu'});\n\t}\n});\n\nFlowRouter.route('/shopping-list', {\n\tname: 'shopping-list',\n\taction() {\n\t\tBlazeLayout.render('MainLayout', {main: 'ShoppingList'});\n\t}\n});","Recipes = new Mongo.Collection('recipes');\n\nRecipes.allow({\n\tinsert: function(userId, doc) {\n\t\treturn !!userId;\n\t},\n\tupdate: function(userId, doc) {\n\t\treturn !!userId;\n\t}\n});\n\nIngredient = new SimpleSchema({\n\tname: {\n\t\ttype: String \n\t},\n\tamount: {\n\t\ttype: String\n\t}\n});\n\nRecipeSchema = new SimpleSchema({\n\tname: {\n\t\ttype: String,\n\t\tlabel: \"Name\"\n\t},\n\tdesc: {\n\t\ttype: String,\n\t\tlabel: \"Description\"\n\t},\n\tingredients: {\n\t\ttype: [Ingredient]\n\t},\n\tinMenu: {\n\t\ttype: Boolean,\n\t\tdefaultValue: false,\n\t\toptional: true,\n\t\tautoform: {\n\t\t\ttype: \"hidden\"\n\t\t}\n\t},\n\tauthor: {\n\t\ttype: String,\n\t\tlabel: \"Author\",\n\t\tautoValue: function () {\n\t\t\treturn this.userId\n\t\t},\n\t\tautoform: {\n\t\t\ttype: \"hidden\"\n\t\t}\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tlabel: \"Created At\",\n\t\tautoValue: function() {\n\t\t\treturn new Date()\n\t\t},\n\t\tautoform: {\n\t\t\ttype: \"hidden\"\n\t\t}\n\t}\n});\n\nMeteor.methods({\n\ttoggleMenuItem: function(id, currentState){\n\t\tRecipes.update(id, {\n\t\t\t$set: {\n\t\t\t\tinMenu: !currentState\n\t\t\t}\n\t\t});\n\t},\n\tdeleteRecipe: function(id){\n\t\tRecipes.remove(id);\n\t}\n});\n\nRecipes.attachSchema(RecipeSchema);","Meteor.startup(function () {\n\t\n});","Meteor.publish('recipes', function(){\n\treturn Recipes.find({author: this.userId});\n});\n\nMeteor.publish('SingleRecipe', function(id){\n\tcheck(id, String);\n\treturn Recipes.find({_id: id});\n});","if (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]}